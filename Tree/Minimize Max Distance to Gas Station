You are given an integer array stations that represents the positions of the gas stations on the x-axis. You are also given an integer k.

You should add k new gas stations. You can add the stations anywhere on the x-axis, and not necessarily on an integer position.

Let penalty() be the maximum distance between adjacent gas stations after adding the k new stations.

Return the smallest possible value of penalty(). Answers within 10-6 of the actual answer will be accepted.


class Solution {
  public double minmaxGasDist(int[] stations, int k) {
    return withBinarySearch(stations, k);
  }
  
  public double withBinarySearch(int[] stations, int k) {
    double minD = 0;
    double maxD = 1e8;
    while(maxD - minD > 1e-6) {
      double mid = minD + ((maxD - minD) / 2);
      
      if(isPossible(stations, k, mid)) {
        // we can potentially reduce max dist. b/w gas stations more
        maxD = mid;
      } else {
        // we can't
        minD = mid;
      }
    }
    
    return minD;
  }
  
  public boolean isPossible(int[] stations, int k, double d) {
    int totalStations = 0;
    for(int i = 1; i < stations.length; i++) {
      totalStations += (int) ((stations[i] - stations[i-1]) / d);
    }
    
    return totalStations <= k;
  }
}
