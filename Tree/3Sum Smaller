  
  Given an array of n integers nums and an integer target, find the number of index triplets i, j, k with 0 <= i < j < k < n that satisfy the condition nums[i] + nums[j] + nums[k] < target.
  
  Example 
  Input: nums = [-2,0,1,3], target = 2
Output: 2
Explanation: Because there are two triplets which sums are less than 2:
[-2,0,1]
[-2,0,3]
  
  
  public int threeSumSmaller(int[] nums, int target) {
        Arrays.sort(nums);
        int count = 0;
        for (int i = 0; i < nums.length - 2; i++) {
            int begin = i + 1;
            int end = nums.length - 1;
            while (end > begin) {
                int sum = nums[i] + nums[begin] + nums[end];
                if (sum < target) {
                    count += end - begin;
                    begin++;
                } else {
                    end--;
                }
            }
        }
        return count;
    }
