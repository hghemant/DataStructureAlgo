public class MatrixMultiplication {

  static int[][] dpTable=new int[10][10];

    public static int MatrixChainOrder(int arr[], int i, int j) {
        if (i == j) return 0;
        
        if(dpTable[i][j]!=-1)return dpTable[i][j];

        dpTable[i][j]=Integer.MAX_VALUE;

        for(int k =i; k<j; k++) {
            dpTable[i][j]= Math.min(dpTable[i][j],MatrixChainOrder(arr,i,k) +MatrixChainOrder(arr,k+1,j)+arr[i-1]*arr[j]*arr[k]);
        }
        return dpTable[i][j];

    }

    public static void main(String[] args) {

        int arr[] = new int[] { 1, 2, 3, 4 };
        //dpTable=new int[arr.length+1][arr.length+1];
        int size = arr.length;
        int p =1;
        for(int i =0;i<arr.length;i++ ) {
            for(int j =0;j<arr.length;j++ ) {
               dpTable[i][j]=-1;
            }
        }

        System.out.println("Minimum number of multiplications is "
                        + MatrixChainOrder(arr, p,size-1));
    }

}
