

import org.omg.CORBA.INTERNAL;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

public class DFS {

    private int V;   // No. of vertices
    private LinkedList<Integer> adj[]; //Adjacency Lists

    public ArrayList<Integer> dfsOfGraph(int v, ArrayList<ArrayList<Integer>> adj,ArrayList<Integer>softDfs){

        boolean vis[] = new boolean[v];
        ArrayList<Integer> ans = new ArrayList<>();
        
        for(int i =0; i <v;i++){
            if(!vis[i]){
                dfsGraph(i,adj,vis,ans);
            }
        }
        return ans;

    }
    public void dfsGraph(int v , ArrayList<ArrayList<Integer>> adj, boolean vis[], ArrayList<Integer> ans){

        vis[v]=true;
        ans.add(v);

        for(Integer neighbour:adj.get(v)){
            if(!vis[neighbour]){
                dfsGraph(0,adj,vis,ans);
            }
        }


    }
}
